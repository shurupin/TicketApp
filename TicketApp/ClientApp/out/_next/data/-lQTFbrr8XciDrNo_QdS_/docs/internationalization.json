{"pageProps":{"article":{"content":"\n# Internationalization\n\nSupporting multiple languages may represent an important feature for your app. To have this enabled\nthe app uses\n`i18next` framework. Read more about it [here](https://www.i18next.com/).\n\n## How it works\n\nYou might need to change all instances of inline text in any components to be wrapped with the `t()`\nfunction as presented below.\n\nThe library needs a configuration and initialization file, in this case, `src/i18n.js` file.\n\nFirst step is to declare the app translations as resources.\n\n```js\nconst resources = {\n  en: {\n    translation: {\n      'Welcome to React': 'Welcome to React and react-i18next'\n    }\n  },\n  fr: {\n    translation: {\n      'Welcome to React': 'Bienvenue Ã  React et react-i18next'\n    }\n  },\n  es: {\n    translation: {\n      'Welcome to React': 'Bienvenido a React and react-i18next'\n    }\n  },\n  // ...\n};\n```\n\nThese translations need to be passed in the `i18n.init()` function to make them available\ninside `App` components tree using the `useTranslation` hook.\n\n```jsx\n// src/pages/index.js\nimport { useTranslation } from 'react-i18next';\n\nconst Page = () => {\n  const { t } = useTranslation();\n\n  return (\n    <h1>\n      {t('Welcome to React')}\n    </h1>\n  );\n};\n```\n\nFor all configuration options, please follow the\n[official documentation](https://www.i18next.com/overview/configuration-options).\n\n## Removing internationalization support\n\n1. Remove `import './i18n` line from `App` component.\n2. Remove `i18n.js` configuration file from `src` folder.\n3. Remove `LanguagePopover` component since it connects with the library.\n3. Uninstall `i18next` and `react-i18next` dependencies.\n","slug":"internationalization","title":"Internationalization"}},"__N_SSG":true}
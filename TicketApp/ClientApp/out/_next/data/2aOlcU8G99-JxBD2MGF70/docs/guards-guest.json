{"pageProps":{"article":{"content":"\n# Guest Guard\n\nThere are some situations when you want to make a route visible exclusively for users that are not\nauthenticated, such as\n`/authentication/register`, `/authentication/login`, etc. \n\nFor such situations, the app provides you with a sample `GuestGuard` component that can be used to \nmake redirect the user to a certain route  (currently `/dashboard`). Should you want to modify said \nroute you can do so by modifying the `GuestGuard` component. There was no need to make a more complex \nlogic for this GuestGuard component, as the business logic needed for your specific app might \nneed a different approach regardless.\n\nTo be able to prevent the entire page render, the app provides a simple `hoc` utility that wraps the\npage with the GuestGuard.\n\n## Example\n\n```jsx\n// src/pages/authentication/login.js\nimport { withGuestGuard } from '../../hocs/with-guest-guard';\n\nconst Page = () => {\n  return (\n    <div>\n      content\n    </div>\n  );\n};\n\nexport default withGuestGuard(Page);\n```\n\n## How it works\n\nIt connects with the authentication provider (Amplify, Auth0, Firebase, or JWT, depending on your\nsetup) and extracts the required data to detect whether it can render the children passed as props,\notherwise it redirects the user to the `/dashboard` route.\n","slug":"guards-guest","title":"Guest Guard"}},"__N_SSG":true}
{"pageProps":{"article":{"content":"\n# Routing\n\nNext.js has a file-system based router built on the concept of pages.\n\nWhen a file is added to the `pages` directory it's automatically available as a route.\n\nThe files inside the `pages` directory can be used to define most common patterns.\n\n## Index routes\n\nThe router will automatically route files named index to the root of the directory.\n\n- `pages/index.js` → `/`\n- `pages/blog/index.js` → `/blog`\n\n## Nested routes\n\nThe router supports nested files. If you create a nested folder structure files will be automatically routed in the same way still.\n\n- `pages/blog/first-post.js` → `/blog/first-post`\n- `pages/dashboard/settings/username.js` → `/dashboard/settings/username`\n\n## Dynamic route segments\n\nDefining routes by using predefined paths is not always enough for complex applications. In Next.js\nyou can add brackets to a page ([param]) to create a dynamic route (a.k.a. url slugs, pretty urls, \nand others).\n\nTo match a dynamic segment you can use the bracket syntax. This allows you to match named parameters.\n\n- `pages/blog/[slug].js` → `/blog/:slug` (`/blog/hello-world`)\n- `pages/[username]/settings.js` → `/:username/settings` (`/foo/settings`)\n- `pages/post/[...all].js` → `/post/*` (`/post/2020/id/title`)\n","slug":"routing","title":"Routing"}},"__N_SSG":true}